{
  "pageTitle":"Get Started",
  "paragraph1":"SunnieJS está disponible para su descarga a través del repositorio de git <a href='https://github.com/SergioGB-work/sunnie' target='_blank'>https://github.com/SergioGB-work/SunnieJS</a>.",
  "paragraph2":"Os recomendamos descargar la <span class='text-primary'>última release disponible</span> de la versión 1 (release/1.1.X)",
  "installationTitle":"Instalación",
  "installationParagraph1":"Lo primero que debes hacer una vez descargado el código sobre una carpeta es <span class='text-primary'>instalar el proyecto</span>. AL ser un proyecto tipo <span class='text-primary'>npm</span> lo único que debes hacer es ejecutar desde la <span class='text-primary'>consola de administración(CMD)</span>, situándote sobre la carpeta del proyecto:",
  "installationParagraph2":"Una vez haya terminado la instalación ya estarás preparado para comenzar a trabajar con SunnieJS.",
  "initServerTitle":"Arrancando el Servidor",
  "initServerParagraph1":"SunnieJS esta construido en base a <span class='text-primary'>Gulp</span> para la automatización de tareas y <span class='text-primary'>Node</span> para la gestión de paquetes y servidor de aplicaciones.",
  "initServerParagraph2":"Si deseas <span class='text-primary'>arrancar</span> el <span class='text-primary'>servidor</span> tan solo debes ejecutar el siguiente comando:",
  "initServerParagraph3":"Esta tarea compilará el proyecto y levantará un servidor local sobre la url <span class='text-primary'>http://localhost:3000</span>",
  "initServerParagraph4":"Gracias a Gulp, SunnieJS dispone de una serie de tareas automatizadas que nos permiten realizar las diferentes operaciones de compilación de una manera muy simple.",
  "initServerParagraph5":"La estructura de todas las tareas que lanzaremos desde CMD es <span class='text-primary'>gulp nombreTarea</span> donde nombre tarea será el nombre de la tarea gulp que ya tenemos precreada para compilara, por ejemplo, el CSS o JS de nuestro proyecto.",
  "initServerParagraph6":"A continuación se muestra el listado principal de <span class='text-primary'>tareas disponibles</span>:",
  "initServerTableTH1":"Nombre Tarea",
  "initServerTableTH2":"Descripción",
  "initServerTableTH3":"Uso",
  "initServerTableContainerDeployDescription":"Tarea general de compilación. Realiza una compilación completa del proyecto, incluyendo todos sus archivos: JS, CSS, HTML, etc...",
  "initServerTableContainerDeployCSSDescription":"Compila sólo el CSS del proyecto, transformando el SASS en código CSS limpio y minificado",
  "initServerTableContainerDeployJSDescription":"Compila sólo el JS del proyecto, transformando el javascript en código js limpio y minificado",
  "initServerTableContainerDeployPUGDescription":"Compila solo el PUG del proyecto, transformando el pug en código HTML limpio y aplicando la internacionalización de variables si es que la hubiese.",
  "initServerParagraph7":"El objetivo de las tareas anteriores es <span class='text-primary'>agilizar el trabajo</span> de cualquier desarrollador permitiendole compilar solo una parte del proyecto lo que conlleva un tiempo mucho menor de <span class='text-primary'>compilación</span> y una mayor <span class='text-primary'>agilidad</span> de desarrollo.",
  "structureProjectTitle":"Estructura de proyecto",
  "structureProjectParagraph1":"Todo proyecto desarrollado con SunnieJS tiene una estructura similar y prefijada.",
  "structureProjectLis11":"código fuente del proyecto. Aquí es donde un desarrollador debe trabajar.",
  "structureProjectLis12":"código precompilado. Es una carpeta con código precompilado previo al código final de public. Le falta la aplicación de la internacionalización.",
  "structureProjectLis13":"código final del proyecto compilado. El resultado solo es html, css y javascript distribuidos en carpetas de idiomas(1 por cada idioma definido en el portal) y es aquií donde apunta el localhost.",
  "structureProjectLis14":"carpeta que almacena todos los módulos de node instalados en el proyecto.",
  "structureProjectParagraph2":"Adicionalmente, es necesario conocer la estructura interna dé la carpeta SRC ya que es en ella donde todo desarrollador debe trabajar.",
  "structureProjectParagraph3":"La estructura básica de la carpeta SRC es la siguiente:",
  "structureProjectLis21":"Contiene todo el código escrito en pug de componentes, layouts, paginas, etc que posteriormente se transformará en HTML",
  "structureProjectLis22":"Contiene todos los estilos genéricos del portal escritos en SASS que posteriormente se transformarán en CSS.",
  "structureProjectLis23":"Contiene todo el javascript genérico del portal.",
  "structureProjectLis24":"Contiene todas las imágenes del portal.",
  "pugParagraph1":"La carpeta de pug contiene una serie de subcarpetas y archivos con unos objetivos prefijados.",
  "pugParagraph2":"En esta carpeta es donde deben <span class='text-primary'>crearse</span> las diferentes <span class='text-primary'>páginas</span> que compondrán el portal web definitivo y sobre los que se compondrán el contenido que lleva cada una.",
  "pugParagraph3":"En la <a href='./pages.html' title='Ir a Páginas'>sección de páginas</a> puedes ver una información más detallada de cómo se crea una página y cúal es su estructura.",
  "componentsParagraph1":"La carpeta componentes contiene todos los componentes creados en el portal para su uso en las páginas. Cada componente se crea en base a una misma estructura y todo el detalle del mismo se puede ver en la <a href='./components.html' title='Ir a Componentes'>sección de componentes</a> de este portal.",
  "layoutsParagraph1":"La carpeta layouts contiene todas las layouts creadas en el portal para su uso a la hora de definir la distribución del contenido de una página. Cada layout se crea en base a una misma estructura y todo el detalle de la misma se puede ver en la <a href='./layouts.html' title='Ir a Layouts'>sección de layouts</a> de este portal.",
  "fragmentsParagraph1":"Un fragment es un <span class='text-primary'>trozo de código reutilizable</span> entre diferentes componentes. Por ejemplo, un botón. En esta carpeta se deben crear lo diferentes fragmentos que se vayan a utilizar en el portal.",
  "localeParagraph1":"Contiene la <span class='text-primary'>traducciones genéricas</span> del portal guardadas en archivos .json",
  "templatesParagraph1":"Contiene la diferentes plantillas a partir de las cuales se crearán los difentes elementos que componen el portal: páginas, componentes, fragmentos, modales, errores, etc...",
  "sassParagraph1":"La carpeta sass contiene todos los estilos genéricos del portal. SunnieJS ya dispone de una serie de estilo predefinidos que el desarrollador debe adaptar al estilo final de cada portal.",
  "sassParagraph2":"SunnieJS utiliza <span class='text-primary'>Bootstrap 3</span> como base para la organización y maquetado de todo su portal. Es por ello que se recomienda modificar lo menos posible los estilos por defecto que trae SunnieJS y extender a partir de los mismos desde el archivo <span class='text-primary'>custom.scss</span>",
  "sassParagraph3":"Adicionalmente, desde <span class='text-primary'>base/variables</span> están todas las <span class='text-primary'>variables genéricas</span> del portal que pueden ser usadas para modificar su estilo sin necesidad de modificar ninguna línea de código, consiguiendo asi un <span class='text-primary'>código limpio y reducido</span>, que penalice lo menos posible la carga del portal.",
  "sassParagraph4":"SunnieJS lleva incorporado la fuente icónica <a href='http://fontawesome.io/icons/'' target='_blank' title='Ir a Font Awesome'>Font Awesome</a> para su uso dentro del portal. Asi mismo, se puede utilizar cualquier otra fuente icónica.",
  "javascriptParagraph1":"El directorio de javascript está subdividido a su vez en otros directorios, cada uno con un fin específico.",
  "javascriptList11":"Son librerias que deben ser cargadas las primeras debido a que otras librerias pueden tener dependencias con ellas. Por ejemplo: jQuery",
  "javascriptList12":"Son las librerías genericas del portal.",
  "javascriptList13":"Son librerias o código JS que debe ejecutarse en la carga inicial del portal desde el <span class='text-primary'>head</span>, sin esperar por nada. Están escritas en javascript puro",
  "javascriptList14":"Archivo principal de javascript. Contiene todas las funciones genéricas del portal definidas en la <a href='./js-functions.html' title='Ir a JS Functions'>página de javascript</a>.",
  "javascriptParagraph2":"Por norma general, cuando desees añadir una nueva librería, deberás añadirla en la carpeta libs.",
  "javascriptParagraph3":"No es necesario añadir la etiqueta <span class='text-primary'>&lt;script&gt;</span> en la cabecera o pie del portal ya que SunnieJS <span class='text-primary'>compila</span> automáticamente las librerias que se encuentran en estas carpetas en un orden para luego generar un único <span class='text-primary'>archivo javascript minificado</span> con todo el código.",
  "imagesParagraph1":"Esta carpeta sirve como almacén de imágenes. Todas las imágenes aquí añadidas pasarán directamente a la carpeta <span class='text-primary'>public</span> dentro de su correspondiente carpeta de images."
}