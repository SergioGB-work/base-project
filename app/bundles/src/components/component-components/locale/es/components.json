{
  "pageTitle":"Componentes",
  "paragraph1":"Todos los componentes de SunnieJS se crean en base a la misma estructura HTML ubicada en <span class='text-primary wbba'>/src/pug/templates/component.pug</span> y la definición de los mismo para su uso está incluída en <span class='text-primary wbba'>/src/pug/templates/include_components.pug</span>.",
  "paragraph2":"A diferencia de versiones anteriores, donde disponíamos de un archivo físico por página, en la nueva versión de SunnieJS toda la definición de las páginas y el uso de cada componente viene definida en el sitemap de cada site.",
  "paragraph3":"Para agregar un componente a una página, la opción más sencilla e intuitiva es utilizar la herramienta de CMS a través de la cual con un simple formulario podremos agregar, editar o borrar componentes a una página y configurarlos.",
  "paragraph4":"Por otro lado, existe la opción de editar directamente el archivo sitemap.json del site y por cada página y hueco de la layout definir los componentes que van y su configuración.",
  "paragraph5":"Cada componente con contenido configurable dispone de un archivo config.json donde se especfican todos los parámetros de configuración de que dispone y que deben configurarse en el objeto content del contenido.",
  "paragraph6":"También existen una serie de parámetros genéricos configurables para agregar un componente y que se listan a continuación:",
  "howToUseTitle":"Uso",
  "param":"Parámetro",
  "description":"Descripción",
  "default":"Por defecto",
  "componentTypeDescription":"Nombre del componente a utilizar. Coincide con el nombre de la carpeta del componente",
  "componentIdDescription":"Identificador único del componente. El identificador se concatena al nombre del componente cuando se realiza la compilación",
  "componentContentDescription":"Contenido dinámico del componente que podemos enviarle como parámetro. Admite cualquier tipo de dato: String, JSON, Array, boolean, etc...",
  "componentComponentTitleDescription":"Título del componente. En caso de seleccionar el parámetro showTitle a true este será el texto que muestre como título.",
  "componentShowTitleDescription":"En caso de estar a 'false' no mostrará el título del componente(componentTitle). Con cualquier otro valor si lo mostrará",
  "componentFullDescription":"Parámetro de estilo. En caso de estar a true el componente se mostrará al 100% del hueco donde está situado, sin definir paddings ni fondo. Se añade la clase component-full al componente.",
  "componentClassesDescription":"Parámetro que perite añadir clases adicionales a la raiz componente para alterar su estilo o comportamiento.",
  "componentNewDescription":"Si está a 'true' el componente se muestra con la vista previa a ser editado",
  "componentExampleParagraph1":"Existen don opciones para agregar un componente, por un lado lo puedes agregar directamente a la página a través del sitemap o el CMS y por otro lado puedes hacer su llamada directamente desde PUG si por ejemplo quieres añadir un componente dentro de otro.",
  "componentExampleParagraph2":"Agregar componente a página",
  "componentExampleParagraph3":"Agregar componente a PUG",
  "example":"Ejemplo",
  "examples":"Ejemplos",
  "componentsList":"Listado de componentes",
  "componentsListParagraph1":"A continuación se muestra el listado de componentes por defecto disponibles para su uso:",
  "goToComponent":"Ir al Componente",
  "goComponents":"Ir a Componentes",
  "goToComponentsList":"Ir al listado de componentes",
  "loginParagraph1":"Formulario de inicio de sesión con validación de formato de campos",
  "params":"Parámetros",
  "showLinkedImage":"Muestra un imagen clicable",
  "name":"Nombre",
  "imageURL":"URL de la imagen",
  "altText":"texto alternativo de la imagen",
  "longDesc":"descripción larga",
  "imageLink":"enlace de la imagen",
  "titleLink":"título del enlace",
  "linkTarget":"target del enlace",
  "imageGoHome":"Imagen Ir A Home",
  "goHome":"Ir a Home",
  "highlightedContentComponentDescription":"Muestra un banner promocional compuesto por un contenido y un botón centrados en el contenedor.",
  "htmlContent":"Contenido HTML del componente",
  "jsonContentButton":"JSON con el contenido del botón.",
  "buttonText":"texto del botón",
  "buttonURL":"url a la que enlaza el botón",
  "buttonTitle":"título del botón",
  "cardCarouselDescription":"Muestra un carrusel de tarjetas compuestas por una imagen, una cabecera, un texto y un enlace. Adicionalmente se le pueda añadir un precio para convertirlo en <a href='#componentProductsCardsListCarousel' title='Ir a Products Cards List Carousel'>carrusel de productos</a>",
  "arrayCards":"Array de tarjetas",
  "arrayImages":"Array de imágenes",
  "cardHeader":"encabezado de la tarjeta",
  "descriptionText":"texto descriptivo",
  "cardLink":"enlace de la tarjeta",
  "cardClasses":"clases css adicionales a añadir a la tarjeta para alterar su visualización",
  "cardPrice":"precio del contenido de la tarjeta",
  "imageComponentDescription":"Muestra una imagen",
  "breadcrumbsComponentDescription":"Muestra las migas de pan",
  "breadcrumbsComponentArray":"Array de páginas en formato JSON. Cada JSON se compone de los siguientes parámetros",
  "pageURL":"url de la página",
  "pageName":"nombre de la página",
  "highlightedSideImageComponentDescription":"Muestra un banner promocional compuesto por un contenido , un botón y una imagen que pueddes seleccionar su posición.",
  "htmlContentComponent":"Contenido HTML del componente",
  "imagePosition":"Posición de la imagen ('left' o 'right')",
  "jsonContentImage":"JSON con el contenido de la imagen.",
  "sliderComponentDescription":"Muestra un Slider de imágenes con navegación y flechas, todo responsivo.",
  "imageTitleLink":"título del enlace de la imagen",
  "logoComponentDescription":"Muestra el logotipo del portal",
  "highlightedBannerComponentDescription":"Muestra un bannner promocional compuesto por un texto y un botón.",
  "highlightedFlipsComponentDescription":"Muestra un array de banners compuestos por un icono, un titular y un texto. El icono puede ser fontawesome, material o glyphicon.",
  "bannerHeader":"Titular de cada banner el listado",
  "bannerDescription":"Texto del banner",
  "bannerIconType":"Tipo de icono del banner(material, fontawesome o glyphicon)",
  "bannerIconCode":"Código del icono del banner",
  "navigationComponentDescription":"Muestra menu de enlaces jerarquizados basado en las clases de bootstrap y con diferentes vistas configurables",
  "navigationView":"vista del menu('tabs','pills'). Si se deja vacío se mostrará un menú vertical",
  "navigationJustified":"Aplicable a pills y tabs. Hace que se vean al 100% del ancho del hueco que ocupan y el contenido sale repartido",
  "navigationStacked":"Apila las pills una encima de otra haciendo un menu vertical",
  "navigationPages":"Array de páginas a mostrar en el menú",
  "childsPages":"Array de páginas hijo de la actual página. Las mostrará como un dropdown siempre y cuando el tipo de navegación lo acepte.",
  "htmlContentDescription":"Permite mostrar cualquier tipo de contenido HTML",
  "htmlContentParamHTMLContent": "Contenido HTML a mostrar",
  "siteSelectorComponentDescription":"Este componente permite cambiar de site entre los sites definidos en el portal.",
  "languageSelectorComponentDescription":"Este componente permite modificar el idioma del portal.",
  "publisherComponentDescription":"Este componente permite mostrar un listado ordenado y paginado de contenidos filtrados por tipo.",
  "publisherContentType":"Tipo de contenido que será mostrardo en el listado",
  "publisherPagination":"Permite activar la paginación. Puede ser 'true' o 'false'",
  "publisherOrder":"Ordenación de los contenidos. Puede ser 'createdDate' o 'name'",
  "publisherInitialPage":"Página inicial a mostrar de los contenidos seleccionados",
  "publisherItemsPerPage":"Número de items a mostrar por página. Si no se muestra paginación actua como limite de elemento a mostrar.",
  "publisherRel":"Contexto de los filtros. Es recomendable su uso si en la página hay otros componentes con filtros.",
  "publisherURLDetail":"URL de la página donde se mostrar el detalle del contenido. Dicha página recibe en la URL un parametro idContent para que cargue el detalle del contenido.",
  "publisherTemplateCode":"Permite personalizar la plantilla que mostrará el listado. Si se deja vacío utilizará la plantilla por defecto.",
  "iconLink":"Enlace del icono",
  "iconAltText":"Texto alternativo del icono",
  "openMode":"Modo de apertura de la nueva URL(redirección o pestaña nueva)",
  "iconType":"Tipo de icono(Font Awesome o Material)",
  "iconCode":"Código del icono. Se debe obtener de la libreria de iconos correspodiente",
  "iconSize":"Tamaño del icono",
  "iconColor":"Color en HEX del icono",
  "formFilterDescription":"Este componente permite generar formularios dinámicos. Dicho formularios puede funcionar como un formuario tradicional al que indicarle un action y enviará toda la información a dicho servicio o podrá funcionar como un filtro, en cuyo caso al enviar el formularios recargará la página publicando los datos en la URL como parametros GET para que puedan ser consumidos por otro componente.",
  "formFilterFormFilter":"Si se selecciona a 'true' el formulario funcionará como un filtro",
  "formFilterAction":"Si el formulario funciona de la forma tradicional, este campo es el servicio al que enviar los datos",
  "formFilterMethod":"Método POST o GET del servicio al que se envian los datos",
  "formFilterCallback":"Función javascript a ejecutar una vez se envían los datos y el servicio responde correctamente",
  "formFilterRel":"Permite crear grupos de datos de tal forma que el formulario publicará los filtros en el grupo de datos indicado. Se debe separar por , si se desea indicar más de un grupo",
  "formFilterItems":"Array de los datos de los inputs que formarán el formulario",
  "formFilterLabel":"Label del campo",
  "formFilterType":"Tipo de campo: text, select, number, etc...",
  "formFilterOptions":"En caso de haber seleccionado tipo select serán los options del select",
  "formFilterOptionText":"Texto del option",
  "formFilterOptionValue":"Valor del option",
  "formFilterName":"Name del campo",
  "formFilterPlaceholder":"Placeholder del campo",
  "formFilterTooltip":"Texto en formato tooltip que sirve de ayuda para el campo",
  "formFilterDefaultValue":"Valor por defecto del campo",
  "formFilterRequired":"Indica si el campo es requerido o no. 'true' o 'false'",
  "formFilterSize":"Tamaño del campo. Utiliza las clases de bootstrap 4",
  "formFilterRegExp":"Expresion regular para validar el campo",
  "dataListDescription":"Este componente permite realizar la carga de datos dinámicos provenientes de un servicio y mostrar a través de una plantilla.",
  "dataListService":"URL del servicio REST que se desea consumir",
  "dataListMethod":"Método de la petición. GET o POST",
  "dataListStaticCode":"Código estático de la plantilla. HTML",
  "dataListTemplate":"ID de la plantilla",
  "dataListTemplateCode":"Código dinámico de la plantilla. JSRender",
  "dataListTarget":"Selector CSS donde se va a colocar el código generado por la plantilla",
  "dataListInitialPage":"Página inicial a cargar si los datos son paginados",
  "dataListItemsPerPage":"Número de items a mostrar por cada página",
  "dataListAditionaldata":"Datos adicionales a enviar el en body de la petición",
  "dataListCallback":"Función javascript a ejecutar una vez se han cargado los datos del servicio",
  "dataListContent":"Parámetros adicionales que se le pueden enviar al callback desde el origen de la petición",
  "dataListEnableGetParams":"Habilita que los datos del servicio se vean afectados por los parámetros GET de la URL. Estos parámetros se transforman en variables que se envían al servicio en la propia petición.",
  "dataListGetParamsList":"Si es definido, solo se filtrarán los datos por los parámetros aquí definidos",
  "dataListRel":"Permite crear grupos de datos de tal forma que solo le afecten aquellos filtros que estén dentro del grupo de datos indicado",
  "dataListLiveReload":"Permite activar la recarga automática de datos",
  "dataListTimeReload":"Intervalo de tiempo que establece cada cuanto se deben recargar los datos",
  "dataListCache":"Si se activa, los datos devueltos por el servicio se almacenarán en sessionstorage.",
  "dataListPagination":"Activa la paginación de los datos si el servicio original es capaz de hacerlo",
  "accordionDescription":"Componente de acordeón en el que se listan diferentes bloques que pueden ser desplegados al ser pulsados.",
  "accordionCollapseParent":"Si se pone a 'true' al abrir cualquier de los acordeones del componente se cerrarán automáticamente el resto si estuviesen abiertos.",
  "accordionHeader":"Encabezado del acordeón",
  "accordionContent":"Contenido desplegable",
  "accordionCollapsed":"Si se selecciona a 'opened' el bloque saldrá por defecto desplegado. Si se selecciona a 'closed' se mostrará cerrado.",
  "filterPillsDescription":"Este componete muestra una pildoras a partir de los parámetros GET de la URL. A través de su configuración se puede gestionar que pildoras se desea que muestre en función del grupo de datos o ignorar las que se desee. Cada pildora dispone de una X que al ser pulsada elimina ese filtro de la URL permitiendo a este componete funcionar conjuntamente con el componente data-list.",
  "filterPillsRel":"Mostrará solo aquellos filtros asociados a los grupos de datos definidos. Se puede definir mas de un grupo separandolos por ,",
  "filterPillsIgnored":"Permite ignorar los filtros que se deseen separándolos por ,",
  "componentConfigParagraph1":"Cada componente configurable tiene un archivo config.json en la raiz de su carpeta que permite definir los campos personalizables que podrá modificar un usuario administrador. Gracias a esto, podemos parametrizar el componente para que tenga diferentes comportamientos dependiendo de la página donde lo queramos usar.",
  "componentConfigParagraph2":"Config es un array de datos que conforman el formulario de gestión de un componente. Cada campo puede ser configurado para controlar su tipo o la forma de visualización. Estos campos pueden ser recuperados desde la view.pug de cada componente para utilizarlos para la personalización del componente.",
  "componentConfigParagraph3":"Por defecto, cada componente tiene una serie de parámetros genéricos definidos que son comunes a todos los componentes pero también existe la posibilidad de añadir nuevos parámetros para cada componente a través de dicho archivo config.js",
  "componentConfigParagraph4":"A continuación, se muestran los diferentes parámetros de configuración de cada campo y los valores que puede tomar.",
  "componentConfigExampleTitle":"Ejemplo de config.json",
  "componentConfigTableTH1":"Atributo",
  "componentConfigTableTH2":"Descripción",
  "componentConfigTableTH3":"Valores",
  "componentConfigTableContainerLabelDescription":"Etiqueta del campo",
  "componentConfigTableContainerTypeDescription":"Tipo de campo del formulario. Si se selecciona textarea, este se convertirá en un elemento de texto enriquecido.",
  "componentConfigTableContainerNameDescription":"El atributo name del campo. Este será el nombre con el que se podrá recuperar posteriormente el valor del campo.",
  "componentConfigTableContainerRequiredDescription":"Si se define, el campo será obligatorio rellenarlo. La definición de este atributo no es obligatoria.",
  "componentConfigTableContainerOptionsDescription":"Si se selecciona type='select', este campo define el array con los diferentes valores del select.",
  "componentConfigTableContainerValueDescription":"Se corresponde con el atributo value del input o con el text en caso de ser un textarea.",
  "componentConfigTableContainerArrayContentDescription":"Si se selecciona type='array' permitirá crear un bloque de elementos repetibles. A nivel visual, en la vista de edición de un componente se mostrarán un boton de + y - para añadir elementos a partir de la estructura definida. Internamente, este campo es un array de inputs que pueden ser definidos como cualquier otro input del config.",
  "componentConfigTableContainerContentDescription":"Si se selecciona type='group' permitirá crear un bloque de elementos englobados por este group. Sirve como elemento agrupador de tal forma que al recibir los datos en el view del componente se podrán acceder a ellos a través de nameDelGroup.nameDelInput. Visualmente, en la vista de edición se mostrará como un fieldset agrupando los inputs que englobe.",
  "componentConfigTableContainerVisibilityDescription":"Si se selecciona a 'hidden' el input aparecerá por defecto oculto.",
  "componentConfigTableContainerIDDescription":"Si se desea, se le puede asignar un ID al campo.",
  "componentConfigTableContainerDataAttributesDescription":"Puedes añadir al input todos los atributos adicionales que desees y que no estén contemplados con las opciones definidas. 'dataAttributes': 'data-parent='[name=formFilter]' data-parent-event='change' data-parent-event-action='show' data-parent-event-value='true''",
  "componentConfigTableContainerDataAttributesParentDescription":"Puedes añadir al form-group que engloba el input todos los atributos adicionales que desees y que no estén contemplados con las opciones definidas. 'dataAttributesParent': 'data-parent='[name=formFilter]' data-parent-event='change' data-parent-event-action='show' data-parent-event-value='true''. Resulta bastante útil cuando necesitas que ciertos campos se muestren u oculten en base a valores de otros por ejemplo.",
  "componentConfigTableContainerParentIdDescription":"Asigna el identificador al form-group padre del input.",
  "componentConfigTableContainerShowLabelDescription":"Indica si deseas mostrar u ocultar el label del input. Por defecto se muestre.",
  "componentConfigTableContainerHelpTextDescription":"Añade un texto de ayuda en forma de tooltip al label.",
  "componentConfigTableContainerClassesDescription":"Añade clases adicionales al input.",
  "stepsDescription":"Este componente está compuesto por elementos repetibles numerados los cuales pueden ser personalizados con un texto e indicar si están activos o no.",
  "stepsText":"Texto del elemento",
  "stepsOnClick":"Función javascript a ejecutar cuando se clica sobre el elemento",
  "stepsCurrent":"Si esta a 'true' el elemento se muestra como activo"
}